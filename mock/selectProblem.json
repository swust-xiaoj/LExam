{"total":1,"data":[{"acedNum":0,"author":null,"codeLimit":0,"createTime":"2016-04-09 20:58:53","description":"<p>尼克每天上班之前都连接上英特网，接收他的上司发来的邮件，这些邮件包含了尼克主管的部门当天要完成的全部任务，每个任务由一个开始时刻与一个持续时间构成。\n尼克的一个工作日为N分钟，从第一分钟开始到第N分钟结束。当尼克到达单位后他就开始干活。如果在同一时刻有多个任务需要完成，尼克可以任选其中的一个来做，而其余的则由他的同事完成，反之如果只有一个任务，则该任务必需由尼克去完成，假如某些任务开始时刻尼克正在工作，则这些任务也由尼克的同事完成。如果某任务于第P分钟开始，持续时间为T分钟，则该任务将在第P+T－1分钟结束。\n写一个程序计算尼克应该如何选取任务，才能获得最大的空暇时间。</p>","inputSample":"15\t6\n1\t2\n1\t6\n4\t11\n8\t5\n8\t1\n11\t5","inputTip":"输入数据第一行含一个空格隔开的整数N和K（1≤n≤10000，1≤k≤10000），N表示尼克的工作时间单位为分钟，K表示任务总数。\n接下来共有K行，每一行有两个用空格隔开的整数P和T，表示该任务从第P分钟开始，持续时间为T分钟，其中1≤P≤N,1≤P+T－1≤N。","judgeModel":0,"level":2,"limitMemory":65535,"limitTime":1000,"outputSample":"4","outputTip":"输出文件仅一行，包含一个整数，表示尼克可能获得的最大空暇时间。","probId":17,"standardSource":"program p2;\nconst maxn=10000;\n\nvar k,i,j,n,m:longint;\n     f:array[1..maxn] of longint;\n     p,t:array[1..maxn] of longint;\n    time:array[1..maxn,1..2] of longint;\nbegin\n   readln(n,m);\n   for i:=1 to m do\n   begin\n    readln(p[i],t[i]);\n    if time[p[i],1]=0 then\n     begin\n      time[p[i],1]:=i;\n      time[p[i],2]:=i;\n     end\n    else\n     inc(time[p[i],2]);\n   end;\n  for i:=n downto 1 do\n  begin\n   if time[i,1]=0 then\n     f[i]:=f[i+1]+1\n    else\n    begin\n     k:=0;\n    for j:=time[i,1] to time[i,2] do\n     if f[i+t[j]]>k then\n      k:=f[i+t[j]];\n     f[i]:=k;\n    end;\n  end;\n  writeln(f[1]);\nend.","testdataNum":null,"title":"尼克的任务(修改)","totalSubmit":126}]}